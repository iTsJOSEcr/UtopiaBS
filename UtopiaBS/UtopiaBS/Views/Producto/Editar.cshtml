@model UtopiaBS.Entities.Producto

@{
    ViewBag.Title = "Editar Producto";
}

<h2>Editar Producto</h2>

@if (!string.IsNullOrEmpty(ViewBag.Mensaje))
{
    <div class="alert alert-info">@ViewBag.Mensaje</div>
}

@using (Html.BeginForm("Editar", "Producto", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    @Html.HiddenFor(model => model.IdProducto) <!-- importante para identificar el producto -->

    <div class="form-horizontal">
        <div class="form-group">
            @Html.LabelFor(m => m.Nombre, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(m => m.Nombre, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(m => m.Nombre, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.Tipo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(m => m.Tipo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(m => m.Tipo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.Proveedor, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(m => m.Proveedor, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(m => m.Proveedor, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.PrecioUnitario, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(m => m.PrecioUnitario, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(m => m.PrecioUnitario, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.CantidadStock, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(m => m.CantidadStock, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(m => m.CantidadStock, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.Fecha, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(m => m.Fecha, new { htmlAttributes = new { @class = "form-control", type = "date" } })
                @Html.ValidationMessageFor(m => m.Fecha, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.Threshold, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(m => m.Threshold, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(m => m.Threshold, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Guardar Cambios" class="btn btn-primary" />
                @Html.ActionLink("Volver al Listado", "Listar", "Producto", null, new { @class = "btn btn-secondary" })
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
