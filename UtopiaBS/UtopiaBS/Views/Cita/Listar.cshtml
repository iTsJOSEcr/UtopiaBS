@model IEnumerable<UtopiaBS.Entities.Cita>
@using UtopiaBS.Entities
@{
    ViewBag.Title = "Calendario de Citas";
    var empleados = ViewBag.Empleados as List<Empleado> ?? new List<Empleado>();
    int? empleadoSeleccionado = ViewBag.EmpleadoSeleccionado != null ? (int?)ViewBag.EmpleadoSeleccionado : null;
}

<div class="container mt-4">
    <h3 class="mb-3 text-center">📅 Calendario de Citas Disponibles</h3>

    <form method="get" action="@Url.Action("Listar", "Cita")" class="d-flex justify-content-center mb-3">
        <select class="form-select form-select-sm filtro-empleado" name="empleadoId" onchange="this.form.submit()">
            <option value="">-- Filtrar por empleado --</option>
            @foreach (var empleado in empleados)
            {
                <option value="@empleado.IdEmpleado" @(empleadoSeleccionado == empleado.IdEmpleado ? "selected" : "")>
                    @empleado.Nombre
                </option>
            }
        </select>
    </form>

    @if (TempData["Mensaje"] != null)
    {
        <div class="alert alert-info text-center py-1">@TempData["Mensaje"]</div>
    }

    <div class="table-responsive shadow-sm bg-white rounded" style="max-height: 400px; overflow-y: auto;">
        <table class="table table-hover table-striped table-sm align-middle text-center mb-0">
            <thead class="table-dark text-uppercase small">
                <tr>
                    <th>Fecha</th>
                    <th>Hora</th>
                    <th>Empleado</th>
                    <th>Servicio</th>
                    <th>Acción</th>
                </tr>
            </thead>
            <tbody>
                @if (!Model.Any())
                {
                    <tr>
                        <td colspan="5" class="text-muted small">No hay citas disponibles</td>
                    </tr>
                }
                else
                {
                    foreach (var cita in Model.OrderBy(c => c.FechaHora))
                    {
                        <tr>
                            <td class="small">@cita.FechaHora.ToString("dd/MM/yyyy")</td>
                            <td class="small">@cita.FechaHora.ToString("HH:mm")</td>
                            <td class="small">@((cita.Empleado != null) ? cita.Empleado.Nombre : "Sin asignar")</td>
                            <td class="small">@((cita.Servicio != null) ? cita.Servicio.Nombre : "Sin asignar")</td>
                            <td>
                                @using (Html.BeginForm("Reservar", "Cita", FormMethod.Post, new { @class = "d-inline" }))
                                {
                                    @Html.AntiForgeryToken()
                                    @Html.Hidden("idCita", cita.IdCita)
                                    @Html.Hidden("idCliente", 1)
                                    var empVal = cita.IdEmpleado.HasValue ? cita.IdEmpleado.Value.ToString() : "";
                                    var servVal = cita.IdServicio.HasValue ? cita.IdServicio.Value.ToString() : "";
                                    @Html.Hidden("idEmpleado", empVal)
                                    @Html.Hidden("idServicio", servVal)

                                    <button type="submit" class="btn btn-success btn-sm">
                                        Reservar Cita
                                    </button>
                                }
                            </td>
                        </tr>
                    }
                }
            </tbody>
        </table>
    </div>
</div>

<style>
    /* Tabla compacta y elegante */
    .table {
        border-radius: 8px;
        overflow: hidden;
        font-size: 0.875rem;
    }

        .table thead {
            background: linear-gradient(90deg, #4e73df, #224abe);
            color: #fff;
            font-weight: 600;
        }

        .table tbody tr:hover {
            background-color: #f8f9fa;
            transition: 0.2s;
        }

    /* Botón compacto y consistente */
    .btn-success {
        border-radius: 15px;
        padding: 4px 10px;
        font-size: 0.85rem;
        font-weight: 500;
    }

    /* Select filtro más suave */
    .filtro-empleado {
        border-radius: 12px;
        padding: 4px 10px;
        font-size: 0.85rem;
        border: 1px solid #ced4da;
        background-color: #f8f9fa;
        transition: border 0.2s, box-shadow 0.2s;
        min-width: 220px;
    }

        .filtro-empleado:focus {
            border-color: #4e73df;
            box-shadow: 0 0 5px rgba(78, 115, 223, 0.5);
            outline: none;
        }

    /* Scroll estilizado para la tabla */
    .table-responsive {
        scrollbar-width: thin;
        scrollbar-color: #4e73df #f1f3f6;
    }

        .table-responsive::-webkit-scrollbar {
            width: 6px;
        }

        .table-responsive::-webkit-scrollbar-track {
            background: #f1f3f6;
            border-radius: 6px;
        }

        .table-responsive::-webkit-scrollbar-thumb {
            background-color: #4e73df;
            border-radius: 6px;
        }
</style>
